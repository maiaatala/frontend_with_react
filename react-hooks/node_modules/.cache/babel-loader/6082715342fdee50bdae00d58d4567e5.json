{"ast":null,"code":"var _jsxFileName = \"/home/atala/Codes/Github/frontend_with_react/react-hooks/src/tutorial/1-useState/1-basics.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // * useState(value) = [value, function]\n// * functions controlls the state of the value\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UseStateBasics = () => {\n  _s();\n\n  const [title, setTitle] = useState(\"random title\");\n\n  const handleClick = () => {\n    if (title === \"random title\") {\n      setTitle(\"hello world\");\n    } else {\n      setTitle(\"random title\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn\",\n      onClick: handleClick,\n      children: \"change title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UseStateBasics, \"nBlfQAlTOIKT4ZCp7Tz/I0Dv06s=\");\n\n_c = UseStateBasics;\nexport default UseStateBasics; // ! important notes\n\n/* \nhooks always start with the word use\ncomponent names must start with uppercase\nthey must be in the function/component body\ncannot be called in condition \n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"UseStateBasics\");","map":{"version":3,"sources":["/home/atala/Codes/Github/frontend_with_react/react-hooks/src/tutorial/1-useState/1-basics.js"],"names":["React","useState","UseStateBasics","title","setTitle","handleClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CAEA;AACA;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,cAAD,CAAlC;;AAEA,QAAMI,WAAW,GAAG,MAAM;AACxB,QAAIF,KAAK,KAAK,cAAd,EAA8B;AAC5BC,MAAAA,QAAQ,CAAC,aAAD,CAAR;AACD,KAFD,MAEO;AACLA,MAAAA,QAAQ,CAAC,cAAD,CAAR;AACD;AACF,GAND;;AAQA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,KAAhC;AAAsC,MAAA,OAAO,EAAEE,WAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAnBD;;GAAMH,c;;KAAAA,c;AAqBN,eAAeA,cAAf,C,CAEA;;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\n\n// * useState(value) = [value, function]\n// * functions controlls the state of the value\n\nconst UseStateBasics = () => {\n  const [title, setTitle] = useState(\"random title\");\n\n  const handleClick = () => {\n    if (title === \"random title\") {\n      setTitle(\"hello world\");\n    } else {\n      setTitle(\"random title\");\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <h1>{title}</h1>\n      <button type=\"button\" className=\"btn\" onClick={handleClick}>\n        change title\n      </button>\n    </React.Fragment>\n  );\n};\n\nexport default UseStateBasics;\n\n// ! important notes\n/* \nhooks always start with the word use\ncomponent names must start with uppercase\nthey must be in the function/component body\ncannot be called in condition \n*/\n"]},"metadata":{},"sourceType":"module"}